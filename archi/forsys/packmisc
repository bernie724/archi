#!/bin/bash

ipacs () {
##packages pacman
cd $idir
pnum=$(cat "$plist" | wc -l)
echo "pacman will install $pnum packages, this will take a bit.."

if [ "$pverbose" = "false" ]; then
echo -n "Installing."
fi

while read set; do
 if [ "$pverbose" = "true" ]; then
echo -n "[$pnum] Installing $set..."
((pacman -Sy --noconfirm --noprogressbar "$set" > /dev/null 2>&1) && echo ".okay.") || echo ".failed!"
 else
((pacman -Sy --noconfirm --noprogressbar "$set" > /dev/null 2>&1) && echo -n ".") || echo -n "!"
 fi
let pnum--
done < "$plist"

if [ "$pverbose" = "false" ]; then
echo ".okay."
fi
}

iflats () {
cd "$idir"
echo -n "Install flatpak..."
(pacman -Sy --noconfirm --noprogressbar flatpak > /dev/null 2>&1) || echo ".Failed to install flatpak!" 
echo ".okay."
echo -n "Add flatpak repo [flathub]..."
(flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo > /dev/null 2>&1) && echo ".okay."
fnum=$(cat "$flist" | wc -l)
echo "flatpak will install $fnum apps, this will take a while.."

if [ "$fverbose" = "false" ]; then
echo -n "Installing."
fi

while read set; do
shortset=$(echo "$set" | rev | cut -d. -f1 | rev | cut -d/ -f1)
 if [ "$fverbose" = "true" ]; then
echo -n "[$fnum] Installing $shortset..."
((flatpak install --noninteractive -y "$set" > /dev/null 2>&1) && echo ".okay.") || (flatpak install --noninteractive -y --or-update "$set" > /dev/null 2>&1 &&  echo ".retry okay.") || echo "...retry failed!"
 else
((flatpak install --noninteractive -y "$set" > /dev/null 2>&1) && echo -n ".") || (flatpak install --noninteractive -y --or-update "$set" > /dev/null 2>&1 &&  echo -n "..") || echo -n "!!"
 fi
let fnum--
done < "$flist"

if [ "$fverbose" = "false" ]; then
echo ".okay."
fi
}

imods () {
##install kmods
echo -n "Install kernel modules [$mlist]..."
if [ -s "$mlist" ]; then
while read amod; do
echo "$amod" > /etc/modules-load.d/"$amod".conf && echo -n "."
done < "$mlist"
fi
echo ".okay."
}


repac () {
cd $idir
pnum=$(cat "$rlist" | wc -l)
echo "Removing $pnum packages..."
while read set; do
echo -n " Removing [$set."
((pacman -R --noconfirm --noprogressbar "$set" > /dev/null 2>&1) && echo ".okay] ") || echo ".failed!] "
let pnum--
done < "$rlist"
}


