#!/bin/bash
##B.Thompson

prephost (){
##prep host 
cd "$idir"
mv "/etc/skel" "/etc/skel.arch" #&& echo -n "."
mv "skel" "/etc/"
##check spash screen true
if [ "$asplash" = "true" ]; then
mv "/etc/mkinitcpio.conf" "/etc/mkinitcpio.conf.arch"
mv "$atool/mkinitcpio.conf.splash" "/etc/mkinitcpio.conf"
rm "$atool/mkinitcpio.conf.nosplash"
else
mv "/etc/mkinitcpio.conf" "/etc/mkinitcpio.conf.arch"
mv "$atool/mkinitcpio.conf.nosplash" "/etc/mkinitcpio.conf"
rm "$atool/mkinitcpio.conf.splash"
fi
##move host scripts
mv "$atool/litexfce.sh" "$aloc/bin/"
mv "$atool/darkxfce.sh" "$aloc/bin/"
mv "$atool/rmpacset.sh" "$aloc/bin/"
mv "$atool/flatiset.sh" "$aloc/bin/"
mv "$atool/frun.sh" "$aloc/bin/"
mv "$atool/alien.sh" "$aloc/bin/"
mv "$atool/dudir.sh" "$aloc/bin/"
##profile for autologin
#if [ "$aauto" = "true" -a "$pbon" = "false" ]; then
#mv "$atool/profile.auto" "$askel/".profile
#rm "$atool/profile.noauto"
#else
#mv "$atool/profile.noauto" "$askel/".profile
#rm "$atool/profile.auto"
#fi
}

prepboot (){
##bootloader prep
echo -n "Installing base..."
(pacman -Sy --needed --color always --noconfirm --noprogressbar base-devel git sudo > /dev/null 2>&1) && echo "..okay."
##change /etc/sudoers to include $USERNAME i.e. you
##sudo no password for user 1000 if asudo is true
if [ "$asudo" = "true" ]; then
echo "$auser ALL=NOPASSWD: ALL" >> /etc/sudoers
fi
}
iboot () {
##Build/install limine
echo -n "Cloning bootloader [$bapp]..."
cd "$apkg"
(git clone https://aur.archlinux.org/$bapp.git > /dev/null 2>&1) && echo ".okay."
echo -n "Build [$bapp]..."
cd "$apkg/$bapp"
chown -R "$auser" "$apkg/$bapp"
(su $auser -c "makepkg -si --noconfirm" > /dev/null 2>&1) && echo ".okay."
}
finboot () {
##config the boot loader limine #as noted many times grub hates me
echo -n "Install [$bapp]..."
cp /usr/share/limine/limine.sys "/$bmnt"
limine-deploy "$rdev" 2> /dev/null
ruuid=$(blkid -s UUID -o value "$rdev$rpar")
if [ "$asplash" = true ]; then
lcmd="splash quiet systemd.show_status=auto rd.udev.log_level=3 loglevel=3"
else
lcmd="rw quiet loglevel=3"
fi
echo 'TIMEOUT=10
TERM_WALLPAPER=boot:///'"$awall"'
TERM_BACKDROP=080808
TERM_WALLPAPER_STYLE=centered
INTERFACE_RESOLUTION=1280x800
INTERFACE_BRANDING=Limine Boot Manager '"[$osn $arev]"'
:'"$osn"'
PROTOCOL=linux
KERNEL_PATH=boot:///vmlinuz-linux
CMDLINE=root=UUID='"$ruuid"' '"$lcmd"'
MODULE_PATH=boot:///initramfs-linux.img' > "$idir/$alim"
cp "$idir/$alim" "/$bmnt"
#cp /etc/skel/archi.jpg /boot
#rm /etc/skel/archi.jpg
echo ".okay."
}
iscreen () {
echo -n "Updating system backgrounds..."
#create screensaver
bi=(snow.jpg sunset.jpg landscape.jpg mountain.jpg reflected.jpg svalbard.jpg)
mkdir "$bdir"
if [ -d "$abdir" ]; then
cd "$abdir"
cp ${bi[@]} "$bdir"
wpp=$(( $RANDOM % 7 + 1 - 1 ))
cp "${bi[2]}" "/$bmnt/$awall"
cd "$idir"
fi
echo ".okay."
}
iplym () {
#plymouth
echo -n "Installing spashscreen [plymouth]..."
((pacman -Sy --noconfirm --noprogressbar "plymouth" > /dev/null 2>&1) && echo ".okay.") || echo ".failed!"
echo -n "Configuring startup splashscreen..."
mv /etc/plymouth/plymouthd.conf /etc/plymouth/plymouthd.conf.arch
echo "Theme=$astheme" >> /etc/skel/plymouthd.conf
mv /etc/skel/plymouthd.conf /etc/plymouth/
if [ -f "/home/"$auser"/plymouthd.conf" ]; then
rm /home/"$auser"/plymouthd.conf
fi
(plymouth-set-default-theme -R "$astheme" > /dev/null 2>&1) && echo -n "."
echo ".okay."
}
iauto () {
##autologin tty1
echo -n "Creating autologin..."
mkdir "/etc/systemd/system/getty@tty1.service.d"
echo '
[Service]
TYPE=simple
ExecStart=
ExecStart=-/sbin/agetty --skip-login --nonewline --noissue --autologin '"$auser"' --noclear %I $TERM
' > "/etc/systemd/system/getty@tty1.service.d/"$osn"ttyss.conf"
echo ".okay."
}
idaemon () {
##daemons, vim vi link
ln -s /usr/bin/vim /usr/bin/vi
echo -n "Enable daemons.."
(systemctl enable NetworkManager > /dev/null 2>&1) && echo -n ".."
(systemctl enable dhcpcd.service > /dev/null 2>&1) && echo -n ".."
(systemctl enable sshd > /dev/null 2>&1) && echo -n ".."
(systemctl enable ntpd > /dev/null 2>&1) && echo -n ".."
(systemctl enable lighttpd > /dev/null 2>&1) && echo -n ".."
(systemctl enable cups > /dev/null 2>&1) && echo -n ".."
(systemctl enable cronie > /dev/null 2>&1) && echo -n ".."
(systemctl enable avahi-daemon > /dev/null 2>&1) && echo -n ".."
(systemctl enable systemd-homed > /dev/null 2>&1) && echo -n ".."
(systemctl enable paccache.timer > /dev/null 2>&1) && echo -n ".."
hwclock -w && echo -n ".."
echo ".okay."
echo -n "Enable Webshare..."
mkdir /srv/http/Webshare
chgrp "$auser" /srv/http/Webshare
chmod 0775 /srv/http/Webshare
echo ".okay."
}
